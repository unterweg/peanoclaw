diff -wruPN ../../FullSWOF_2D-1.04.08/.cproject ../../FullSWOF_2D/.cproject
--- ../../FullSWOF_2D-1.04.08/.cproject	1970-01-01 01:00:00.000000000 +0100
+++ ../../FullSWOF_2D/.cproject	2014-04-04 13:12:11.000000000 +0200
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
+	<storageModule moduleId="org.eclipse.cdt.core.settings">
+		<cconfiguration id="cdt.managedbuild.config.gnu.exe.debug.682623297">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.debug.682623297" moduleId="org.eclipse.cdt.core.settings" name="Debug">
+				<externalSettings/>
+				<extensions>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
+					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.debug.682623297" name="Debug" parent="cdt.managedbuild.config.gnu.exe.debug">
+					<folderInfo id="cdt.managedbuild.config.gnu.exe.debug.682623297." name="/" resourcePath="">
+						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.debug.845014685" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.debug">
+							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.debug.806324041" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.debug"/>
+							<builder buildPath="${workspace_loc:/FullSWOF_2D}/Debug" id="cdt.managedbuild.target.gnu.builder.exe.debug.474214867" managedBuildOn="true" name="Gnu Make Builder.Debug" superClass="cdt.managedbuild.target.gnu.builder.exe.debug"/>
+							<tool id="cdt.managedbuild.tool.gnu.archiver.base.1830222842" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug.1603886697" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug">
+								<option id="gnu.cpp.compiler.exe.debug.option.optimization.level.878037157" superClass="gnu.cpp.compiler.exe.debug.option.optimization.level" value="gnu.cpp.compiler.optimization.level.none" valueType="enumerated"/>
+								<option id="gnu.cpp.compiler.exe.debug.option.debugging.level.388284403" superClass="gnu.cpp.compiler.exe.debug.option.debugging.level" value="gnu.cpp.compiler.debugging.level.max" valueType="enumerated"/>
+								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.808174446" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.debug.359541343" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.debug">
+								<option defaultValue="gnu.c.optimization.level.none" id="gnu.c.compiler.exe.debug.option.optimization.level.930187393" superClass="gnu.c.compiler.exe.debug.option.optimization.level" valueType="enumerated"/>
+								<option id="gnu.c.compiler.exe.debug.option.debugging.level.782163724" superClass="gnu.c.compiler.exe.debug.option.debugging.level" value="gnu.c.debugging.level.max" valueType="enumerated"/>
+								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.446214702" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.debug.2009148444" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.debug"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug.2094066844" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.debug">
+								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.526214599" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
+									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
+									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
+								</inputType>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.assembler.exe.debug.1611594184" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.debug">
+								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1211452141" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
+							</tool>
+						</toolChain>
+					</folderInfo>
+				</configuration>
+			</storageModule>
+			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
+		</cconfiguration>
+		<cconfiguration id="cdt.managedbuild.config.gnu.exe.release.25154730">
+			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="cdt.managedbuild.config.gnu.exe.release.25154730" moduleId="org.eclipse.cdt.core.settings" name="Release">
+				<externalSettings/>
+				<extensions>
+					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
+					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
+				</extensions>
+			</storageModule>
+			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe" cleanCommand="rm -rf" description="" id="cdt.managedbuild.config.gnu.exe.release.25154730" name="Release" parent="cdt.managedbuild.config.gnu.exe.release">
+					<folderInfo id="cdt.managedbuild.config.gnu.exe.release.25154730." name="/" resourcePath="">
+						<toolChain id="cdt.managedbuild.toolchain.gnu.exe.release.1907379155" name="Linux GCC" superClass="cdt.managedbuild.toolchain.gnu.exe.release">
+							<targetPlatform id="cdt.managedbuild.target.gnu.platform.exe.release.825903428" name="Debug Platform" superClass="cdt.managedbuild.target.gnu.platform.exe.release"/>
+							<builder buildPath="${workspace_loc:/FullSWOF_2D}/Release" id="cdt.managedbuild.target.gnu.builder.exe.release.696003842" managedBuildOn="true" name="Gnu Make Builder.Release" superClass="cdt.managedbuild.target.gnu.builder.exe.release"/>
+							<tool id="cdt.managedbuild.tool.gnu.archiver.base.159777290" name="GCC Archiver" superClass="cdt.managedbuild.tool.gnu.archiver.base"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.1598427519" name="GCC C++ Compiler" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.exe.release">
+								<option id="gnu.cpp.compiler.exe.release.option.optimization.level.1319719660" superClass="gnu.cpp.compiler.exe.release.option.optimization.level" value="gnu.cpp.compiler.optimization.level.most" valueType="enumerated"/>
+								<option id="gnu.cpp.compiler.exe.release.option.debugging.level.137754920" superClass="gnu.cpp.compiler.exe.release.option.debugging.level" value="gnu.cpp.compiler.debugging.level.none" valueType="enumerated"/>
+								<inputType id="cdt.managedbuild.tool.gnu.cpp.compiler.input.135283308" superClass="cdt.managedbuild.tool.gnu.cpp.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.compiler.exe.release.389305694" name="GCC C Compiler" superClass="cdt.managedbuild.tool.gnu.c.compiler.exe.release">
+								<option defaultValue="gnu.c.optimization.level.most" id="gnu.c.compiler.exe.release.option.optimization.level.1646249252" superClass="gnu.c.compiler.exe.release.option.optimization.level" valueType="enumerated"/>
+								<option id="gnu.c.compiler.exe.release.option.debugging.level.423258309" superClass="gnu.c.compiler.exe.release.option.debugging.level" value="gnu.c.debugging.level.none" valueType="enumerated"/>
+								<inputType id="cdt.managedbuild.tool.gnu.c.compiler.input.1508578878" superClass="cdt.managedbuild.tool.gnu.c.compiler.input"/>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.c.linker.exe.release.2048984525" name="GCC C Linker" superClass="cdt.managedbuild.tool.gnu.c.linker.exe.release"/>
+							<tool id="cdt.managedbuild.tool.gnu.cpp.linker.exe.release.1089732846" name="GCC C++ Linker" superClass="cdt.managedbuild.tool.gnu.cpp.linker.exe.release">
+								<inputType id="cdt.managedbuild.tool.gnu.cpp.linker.input.240110811" superClass="cdt.managedbuild.tool.gnu.cpp.linker.input">
+									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
+									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
+								</inputType>
+							</tool>
+							<tool id="cdt.managedbuild.tool.gnu.assembler.exe.release.1231916022" name="GCC Assembler" superClass="cdt.managedbuild.tool.gnu.assembler.exe.release">
+								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.645371028" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
+							</tool>
+						</toolChain>
+					</folderInfo>
+				</configuration>
+			</storageModule>
+		</cconfiguration>
+	</storageModule>
+	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
+		<project id="FullSWOF_2D.cdt.managedbuild.target.gnu.exe.62785438" name="Executable" projectType="cdt.managedbuild.target.gnu.exe"/>
+	</storageModule>
+	<storageModule moduleId="scannerConfiguration">
+		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.release.25154730;cdt.managedbuild.config.gnu.exe.release.25154730.;cdt.managedbuild.tool.gnu.cpp.compiler.exe.release.1598427519;cdt.managedbuild.tool.gnu.cpp.compiler.input.135283308">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.debug.682623297;cdt.managedbuild.config.gnu.exe.debug.682623297.;cdt.managedbuild.tool.gnu.c.compiler.exe.debug.359541343;cdt.managedbuild.tool.gnu.c.compiler.input.446214702">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.debug.682623297;cdt.managedbuild.config.gnu.exe.debug.682623297.;cdt.managedbuild.tool.gnu.cpp.compiler.exe.debug.1603886697;cdt.managedbuild.tool.gnu.cpp.compiler.input.808174446">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+		<scannerConfigBuildInfo instanceId="cdt.managedbuild.config.gnu.exe.release.25154730;cdt.managedbuild.config.gnu.exe.release.25154730.;cdt.managedbuild.tool.gnu.c.compiler.exe.release.389305694;cdt.managedbuild.tool.gnu.c.compiler.input.1508578878">
+			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
+		</scannerConfigBuildInfo>
+	</storageModule>
+	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
+</cproject>
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libparameters/misc.hpp ../../FullSWOF_2D/Headers/libparameters/misc.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libparameters/misc.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libparameters/misc.hpp	2014-07-09 11:23:18.435439793 +0200
@@ -53,6 +53,9 @@
  *
  ******************************************************************************/
 
+#ifndef MISC_HPP
+#define MISC_HPP
+
 #include <vector>
 #include <iostream>
 #include <cmath>
@@ -65,8 +68,8 @@
 #include <cfloat>
 #include <unistd.h>
 
-#define max(a,b) (a>=b?a:b)
-#define min(a,b) (a<=b?a:b)
+//#define max(a,b) (a>=b?a:b)
+//#define min(a,b) (a<=b?a:b)
 
 #define GRAV 9.81
 #define GRAV_DEM 4.905
@@ -76,7 +79,14 @@
 #define VE_CA 1.e-12
 #define MAX_CFL_X 0.
 #define MAX_CFL_Y 0.
+
+// PEANOCLAW EXTENSION
+#if defined(PEANOCLAW_FULLSWOF2D)
+#warning PeanoClaw single iteration mode activated for FullSWOF2D!
+#define MAX_ITER 1
+#else
 #define MAX_ITER 1000000000
+#endif
 /*NB_CHAR is the maximum length of a comment line */
 #define NB_CHAR 256
 #define ZERO 0.
@@ -96,3 +106,4 @@
 
 typedef vector< vector< SCALAR > > TAB;
 
+#endif
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libparameters/parameters.hpp ../../FullSWOF_2D/Headers/libparameters/parameters.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libparameters/parameters.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libparameters/parameters.hpp	2014-07-07 19:35:13.647585545 +0200
@@ -55,7 +55,6 @@
 
 #include "misc.hpp"
 
-
 #ifndef PARAMETERS_HPP
 #define PARAMETERS_HPP
 
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libreconstructions/choice_reconstruction.hpp ../../FullSWOF_2D/Headers/libreconstructions/choice_reconstruction.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libreconstructions/choice_reconstruction.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libreconstructions/choice_reconstruction.hpp	2014-07-10 13:08:52.684415782 +0200
@@ -103,5 +103,8 @@
 		 * \brief Destructor
 		 */
 		virtual ~ Choice_reconstruction();
+
+        // PEANOCLAW extension:
+        void initialize(TAB& z);
 };
 #endif
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libreconstructions/muscl.hpp ../../FullSWOF_2D/Headers/libreconstructions/muscl.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libreconstructions/muscl.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libreconstructions/muscl.hpp	2014-04-04 13:14:04.000000000 +0200
@@ -98,5 +98,8 @@
 		 * \brief Destructor
 		 */
   ~MUSCL();
+
+  // PEANOCLAW extension:
+  virtual void initialize(TAB& z);
 };
 #endif
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libreconstructions/reconstruction.hpp ../../FullSWOF_2D/Headers/libreconstructions/reconstruction.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libreconstructions/reconstruction.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libreconstructions/reconstruction.hpp	2014-04-04 13:14:04.000000000 +0200
@@ -105,6 +105,9 @@
    * \brief Destructor
 		 */
   virtual ~Reconstruction();
+
+  // PEANOCLAW extension
+  virtual void initialize(TAB& z) {}
 };
 #endif
 
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libschemes/choice_scheme.hpp ../../FullSWOF_2D/Headers/libschemes/choice_scheme.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libschemes/choice_scheme.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libschemes/choice_scheme.hpp	2014-04-04 13:14:04.000000000 +0200
@@ -97,5 +97,10 @@
 		 * \brief Destructor
 		 */
 		virtual ~Choice_scheme();
+
+        // PEANOCLAW extension:
+        Scheme *getInternalScheme() {
+            return Sche;
+        }
 };
 #endif
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libschemes/order2.hpp ../../FullSWOF_2D/Headers/libschemes/order2.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libschemes/order2.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libschemes/order2.hpp	2014-04-04 13:14:04.000000000 +0200
@@ -71,7 +71,6 @@
  * Class that computes the solution with a numerical scheme at order 2.
  */
 
-
 class Order2: public Scheme{
 	protected:
 		SCALAR tmp;
diff -wruPN ../../FullSWOF_2D-1.04.08/Headers/libschemes/scheme.hpp ../../FullSWOF_2D/Headers/libschemes/scheme.hpp
--- ../../FullSWOF_2D-1.04.08/Headers/libschemes/scheme.hpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Headers/libschemes/scheme.hpp	2014-07-09 16:51:12.389683862 +0200
@@ -98,6 +98,8 @@
 #ifndef SCHEME_HPP
 #define SCHEME_HPP
 
+#include <sys/time.h>
+
 /** @class Scheme
  * @brief Numerical scheme
  * @details 
@@ -106,6 +108,47 @@
 
 
 class Scheme{
+    public:
+         // PEANOCLAW extensions: time measurements
+        typedef struct {
+            // maincalcflux times
+            double horizontal_flux_time;
+            double vertical_flux_time;
+            int maincalcflux_samples;
+
+            // maincalcscheme times
+            double rain_time;
+            double mass_conservation_time;
+            double infiltration_time;
+            double momentum_time;
+            double accumulated_rain_time;
+            int maincalcscheme_samples;
+
+            // times used in order 2
+            double delz_time;
+            int delz_samples;
+            
+            double boundary_time;
+            int boundary_samples;
+
+            double reconstruction_time;
+            int reconstruction_samples;
+            
+            double vincopy_time;
+            int vincopy_samples;
+
+            double filter_time;
+            int filter_samples;
+
+            double heun_time;
+            int heun_samples;
+
+            // total time
+            double total_time;
+            int total_samples;
+        } timings_t;
+
+
  protected :
   /**  @brief Number of cells in x.*/
   const	int NXCELL;
@@ -308,6 +351,7 @@
 
   int verif;
 
+        timings_t time_meas;
  public:
   /*!
    * \brief Constructor
@@ -315,10 +359,10 @@
   Scheme(Parameters &);
   
   /** @brief Main calculation of the flux */
-  void maincalcflux(SCALAR,SCALAR, SCALAR, SCALAR , SCALAR, SCALAR &);
+      virtual void maincalcflux(SCALAR,SCALAR, SCALAR, SCALAR , SCALAR, SCALAR &);
   
   /** @brief Main calculation of the scheme */
-  void maincalcscheme(TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,SCALAR,SCALAR,int);
+      virtual void maincalcscheme(TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,TAB &,SCALAR,SCALAR,int);
 
 
   /*!
@@ -342,5 +386,68 @@
    * \brief Destructor
    */
   virtual ~Scheme();
+
+  // PEANOCLAW EXTENSIONS
+  double getTimestep() {
+    return dt1;
+  }
+
+  void setTimestep(double timestep) {
+    dt1 = timestep;
+    dt_max = std::min(DX*CFL_FIX,DY*CFL_FIX); // TODO: this is new, compared to the nice poster version
+  }
+ 
+  void setMaxTimestep(double timestep) {
+    dt_max = std::min(timestep, std::min(DX*CFL_FIX,DY*CFL_FIX)); // TODO: this is new, compared to the nice poster version
+  }
+ 
+  double getMaxTimestep() {
+    return std::min(DX*CFL_FIX,DY*CFL_FIX); // TODO: this is new, compared to the nice poster version
+  }
+
+  bool _usePeanoClaw;
+  bool _lastTimestep;
+  void usePeanoClaw() {
+    _usePeanoClaw = true;
+  }
+
+  void runLastTimestep() {
+    _lastTimestep = true;
+  }
+
+  int getVerif() {
+    return verif;
+  }
+
+  void resetN() {
+    n = 0;
+  }
+
+  /** Topography.*/
+  TAB& getZ() { return z; }
+  /** Water height.*/
+  TAB& getH() { return h; }
+  /** X Velocity.*/
+  TAB& getU() { return u; }
+  /** Y Velocity.*/
+  TAB& getV() { return v; }
+  /** Discharge.*/
+  TAB& getQ1() { return q1; }
+  /** Discharge.*/
+  TAB& getQ2() { return q2; }
+  /** Water height after one step of the scheme. OBSOLETE*/
+  TAB& getHs() { return hs; }
+  /** X Velocity after one step of the scheme. OBSOLETE */
+  TAB& getUs() { return us; }
+  /** Y Velocity after one step of the scheme. OBSOLETE*/
+  TAB& getVs() { return vs; }
+  /** Discharge after one step of the scheme. OBSOLETE*/
+  TAB& getQs1() { return qs1; }
+  /** Discharge after one step of the scheme.OBSOLETE */
+  TAB& getQs2() { return qs2; }
+
+  // return timings
+  Scheme::timings_t& getTimings() { return time_meas; }
+  void resetTimings();
 };
 #endif
diff -wruPN ../../FullSWOF_2D-1.04.08/.project ../../FullSWOF_2D/.project
--- ../../FullSWOF_2D-1.04.08/.project	1970-01-01 01:00:00.000000000 +0100
+++ ../../FullSWOF_2D/.project	2014-04-04 13:12:11.000000000 +0200
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<projectDescription>
+	<name>FullSWOF_2D</name>
+	<comment></comment>
+	<projects>
+	</projects>
+	<buildSpec>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.genmakebuilder</name>
+			<triggers>clean,full,incremental,</triggers>
+			<arguments>
+			</arguments>
+		</buildCommand>
+		<buildCommand>
+			<name>org.eclipse.cdt.managedbuilder.core.ScannerConfigBuilder</name>
+			<triggers>full,incremental,</triggers>
+			<arguments>
+			</arguments>
+		</buildCommand>
+	</buildSpec>
+	<natures>
+		<nature>org.eclipse.cdt.core.cnature</nature>
+		<nature>org.eclipse.cdt.core.ccnature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.managedBuildNature</nature>
+		<nature>org.eclipse.cdt.managedbuilder.core.ScannerConfigNature</nature>
+	</natures>
+</projectDescription>
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libboundaryconditions/bc_wall.cpp ../../FullSWOF_2D/Sources/libboundaryconditions/bc_wall.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libboundaryconditions/bc_wall.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libboundaryconditions/bc_wall.cpp	2014-04-04 13:13:55.000000000 +0200
@@ -103,7 +103,6 @@
 }
 
 void Bc_wall::calcul(SCALAR hin,SCALAR unorm_in,SCALAR utan_in,SCALAR hfix,SCALAR qfix,SCALAR hin_oppbound,SCALAR unorm_in_oppbound,SCALAR utan_in_oppbound,SCALAR time, int n1, int n2) {
-
     unormbound = -unorm_in;
     utanbound = utan_in;
     hbound = hin;
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libboundaryconditions/choice_condition.cpp ../../FullSWOF_2D/Sources/libboundaryconditions/choice_condition.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libboundaryconditions/choice_condition.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libboundaryconditions/choice_condition.cpp	2014-04-04 13:13:55.000000000 +0200
@@ -92,6 +92,7 @@
 }
 
 void Choice_condition::calcul(SCALAR hin, SCALAR unorm_in, SCALAR utan_in, SCALAR hfix, SCALAR qfix, SCALAR hin_oppbound, SCALAR unorm_in_oppbound, SCALAR utan_in_oppbound, SCALAR time, int n1, int n2) {
+//#warning FULLSWOF2D Boundary computation disabled
     C->calcul(hin,unorm_in,utan_in,hfix,qfix,hin_oppbound,unorm_in_oppbound,utan_in_oppbound,time, n1, n2);
 }
 
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/librain_infiltration/infiltration.cpp ../../FullSWOF_2D/Sources/librain_infiltration/infiltration.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/librain_infiltration/infiltration.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/librain_infiltration/infiltration.cpp	2014-04-04 13:13:55.000000000 +0200
@@ -77,10 +77,14 @@
 
 }
 
+// W T F - a COPY of std::vector<std::vector>??
+// reason: if they did return a reference, they would overwrite still required source data as they go
 TAB Infiltration::get_hmod() const{
   return  hmod;
 }
 
+// W T F - a COPY of std::vector<std::vector>??
+// reason: if they did return a reference, they would overwrite still required source data as they go
 TAB Infiltration::get_Vin() const{
   return  Vin;
 }
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/librain_infiltration/rain_generated.cpp ../../FullSWOF_2D/Sources/librain_infiltration/rain_generated.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/librain_infiltration/rain_generated.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/librain_infiltration/rain_generated.cpp	2014-04-16 11:11:32.000000000 +0200
@@ -67,8 +67,8 @@
     
   for (int i=1 ; i<NXCELL+1 ; i++){
     for (int j=1 ; j<NYCELL+1 ; j++){
-      Tab_rain[i][j]=0.00001;
-      
+      //Tab_rain[i][j]=0.00001; // ~50mm / h
+      Tab_rain[i][j]=0.001; // used for poster,  would be 5000mm/h or 1.38mm/s or 83mm/min = 6.3cm/min
     }
   }     
  
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libreconstructions/choice_reconstruction.cpp ../../FullSWOF_2D/Sources/libreconstructions/choice_reconstruction.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libreconstructions/choice_reconstruction.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libreconstructions/choice_reconstruction.cpp	2014-04-04 13:13:55.000000000 +0200
@@ -76,7 +76,6 @@
 		case 3:
 			Rec = new ENO_mod(par,z);
 			break;
-		  
 		}
 }
 
@@ -90,3 +89,7 @@
 		Rec = NULL;
 	}
 }
+
+void Choice_reconstruction::initialize(TAB& z) {
+    Rec->initialize(z);
+}
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libreconstructions/muscl.cpp ../../FullSWOF_2D/Sources/libreconstructions/muscl.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libreconstructions/muscl.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libreconstructions/muscl.cpp	2014-04-04 13:13:55.000000000 +0200
@@ -85,27 +85,19 @@
 
 	z1l[NXCELL+1].resize(NYCELL+1);
 
-	for (int j=1 ; j<NYCELL+1 ; j++){
-	  z1r[0][j] = z[0][j];
-	  z1l[NXCELL+1][j] = z[NXCELL+1][j];
-	  delta_z1[0][j] = z[1][j]-z[0][j];
-	} //end for j
-
-	for (int i=1 ; i<NXCELL+1 ; i++){
-	  z2r[i][0] = z[i][0];
-	  z2l[i][NYCELL+1] = z[i][NYCELL+1];
-	  delta_z2[i][0] = z[i][1]-z[i][0];
-	  for (int j=1 ; j<NYCELL+1 ; j++){
-	    delta_z1[i][j] = z[i+1][j]-z[i][j];
-	    delta_z2[i][j] = z[i][j+1]-z[i][j];
-	  } //end for j
-	} //end for i
+    initialize(z);
 }
 
 
 void MUSCL::calcul(TAB & h,TAB & u,TAB & v,TAB & z,TAB & delzc1,TAB & delzc2,TAB & delz1,TAB & delz2,TAB & h1r,TAB & u1r,TAB & v1r,TAB & h1l,TAB & u1l,TAB & v1l,TAB & h2r,TAB & u2r,TAB & v2r,TAB & h2l,TAB & u2l,TAB & v2l){
+    // INPUT:
+    // h, u, v
 
+    // OUTPUT: h1r, h1l, z1r, z1l, delz1, delzc1, u1r, u1l, v1r, v1l
+    //         h2r, h2l, z2r, z2l, delz2, delzc2
 
+    // z1r,z1l,z2l,z2r only used by reconstruction methods,
+    // see base class
 
 	for(int j=1 ; j<NYCELL+1 ; j++){
 
@@ -258,3 +250,22 @@
 	delta_z1.clear();
 	delta_z2.clear();
 }
+
+void MUSCL::initialize(TAB & z) {
+
+	for (int j=1 ; j<NYCELL+1 ; j++){
+	  z1r[0][j] = z[0][j];
+	  z1l[NXCELL+1][j] = z[NXCELL+1][j];
+	  delta_z1[0][j] = z[1][j]-z[0][j];
+	} //end for j
+
+	for (int i=1 ; i<NXCELL+1 ; i++){
+	  z2r[i][0] = z[i][0];
+	  z2l[i][NYCELL+1] = z[i][NYCELL+1];
+	  delta_z2[i][0] = z[i][1]-z[i][0];
+	  for (int j=1 ; j<NYCELL+1 ; j++){
+	    delta_z1[i][j] = z[i+1][j]-z[i][j];
+	    delta_z2[i][j] = z[i][j+1]-z[i][j];
+	  } //end for j
+	} //end for i
+}
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libschemes/choice_scheme.cpp ../../FullSWOF_2D/Sources/libschemes/choice_scheme.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libschemes/choice_scheme.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libschemes/choice_scheme.cpp	2014-04-04 13:13:55.000000000 +0200
@@ -72,7 +72,6 @@
 		case 2:
 			Sche = new Order2(par);
 			break;
-		  
 	}
 }
 
@@ -82,8 +81,19 @@
 	 * @details
 	 * Calls the computation of the solution.
 	 */
+    Scheme::timings_t& time_meas = Sche->getTimings();
+  
+    struct timeval start;
+    struct timeval stop;
+
+ 
+    gettimeofday(&start, NULL);
 
 	Sche->calcul();
+
+    gettimeofday(&stop, NULL);
+    time_meas.total_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
+    ++time_meas.total_samples;
 }
 
 Choice_scheme::~Choice_scheme(){
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libschemes/order1.cpp ../../FullSWOF_2D/Sources/libschemes/order1.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libschemes/order1.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libschemes/order1.cpp	2014-07-08 08:29:48.073930351 +0200
@@ -61,7 +61,21 @@
 Order1::~Order1(){}
 
 
-
+// NOTES for PeanoClaw
+// variables: 
+//  - h,u,v,q1,q2, z
+//
+//  can we compute these on demand: (topography does not change in time?)
+//  - delz1 (horizontal ghostlayer included) derived from z
+//  - delz2 (vertical ghostlayer included)  derived from z
+//  - delzc2,delzc1 Not used?
+
+// temp buffers:
+//  - h1r,u1r,v1r
+//  - h1l,u1l,v1l
+//
+//  - h2r,u2r,v2r
+//  - h2l,u2l,v2l
 
 
 void Order1::calcul() {
@@ -98,7 +112,6 @@
   
   time(&start);
   
-  
   //time iteration's beginning
   while (T > tps  && n < MAX_ITER+1) {
 
@@ -138,7 +151,9 @@
       } //end for j
     } //end for i
     
+    // goes in [0; nxcell+1]
     for (int i=0 ; i<NXCELL+1 ; i++) {
+      // goes in [1; nycell]
       for (int j=1 ; j<NYCELL+1 ; j++) {
 	h1r[i][j] = h[i][j];
 	u1r[i][j] = u[i][j];
@@ -150,8 +165,9 @@
     }//end for i
     
     
-      
+    // goes in [1; nxcell]
     for (int i=1 ; i<NXCELL+1 ; i++) {
+      // goes in [0; nycell+1]
       for (int j=0 ; j<NYCELL+1 ; j++) {
 	h2r[i][j] = h[i][j];
 	u2r[i][j] = u[i][j];
@@ -224,15 +240,19 @@
     out->check_vol(tps,dt1,Volrain_Tot,Vol_inf_tot_cumul,Vol_of_tot,Total_discharge_outflow);
 #endif 
  
+#if !defined(PEANOCLAW_FULLSWOF2D)
      //Display the percentage of elapsed time       
       cout  << '\r' << '\t' << "[" << int((tps/T)*100) << "%] done" ;  
+#endif
        
   } //end for n : loop in time
   
+#if !defined(PEANOCLAW_FULLSWOF2D) // this is actually intended
   //Verify the reason of the run finished
   if (n>MAX_ITER){
     cerr << "\n order1: WARNING: the computation finished because the maximum number of time steps was reached (see MAX_ITER in misc.hpp)\n"; 
   }
+#endif
 
     //to give the ultimate situation
   out->write(h,u,v,z,tps);
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libschemes/order2.cpp ../../FullSWOF_2D/Sources/libschemes/order2.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libschemes/order2.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libschemes/order2.cpp	2014-07-09 16:55:55.821007850 +0200
@@ -53,9 +53,14 @@
  * knowledge of the CeCILL license and that you accept its terms.
  *
  ******************************************************************************/
+#include <sys/time.h>
+
+#include <iomanip>
 
 #include "order2.hpp"
 
+//#define DEBUG
+
 Order2::Order2(Parameters & par):Scheme(par){
   
 	/**
@@ -126,7 +131,30 @@
   
 }
 
+// NOTES for PeanoClaw:
+// old version: Vin1
+// new version: Vin2
+//
+// variables:
+//  h, u, v , q1, q2
+//  hs, us, vs, qs1, qs2
+//  usa, vsa
+
 void Order2::calcul(){
+  struct timeval start_tv;
+  struct timeval stop_tv;
+
+  struct timeval total_start_tv;
+  struct timeval total_stop_tv;
+
+  //TODO unterweg debug
+//  std::cout << "calcul: dt1=" << dt1 << ", dt_max=" << dt_max << std::endl;
+  n = 0;
+  verif = 1;
+  dt_max=min(DX*CFL_FIX,DY*CFL_FIX);
+  tps=0;
+  dt1=0.;
+
 	/**
 	 * @details Performs the second order numerical scheme.
 	 * @note In DEBUG mode, the programme will save another file with boundary fluxes.
@@ -134,27 +162,44 @@
 
   //initialization
   
+  gettimeofday(&total_start_tv, NULL);
+
   SCALAR dt2;  
  
+  gettimeofday(&start_tv, NULL);
+
+  rec->initialize(z);
+
+  gettimeofday(&stop_tv, NULL);
+  time_meas.delz_time += (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+  ++time_meas.delz_samples;
  
   time(&start);
   //time's iteration beginning 
-
-  while (T > tps  && n < MAX_ITER+1){  
+  while (T > tps  && n < MAX_ITER){
  
     if (1 == verif){
       dt1=dt_max;
       
+#if !defined(PEANOCLAW_FULLSWOF2D)
       // save the data in huz_evolution.dat      
       if (tps >= T_output){
 	out->write(h,u,v,z,tps);
 	T_output+=dt_output;
       }// end if
+#endif
       
       
       //boundary conditions
+      gettimeofday(&start_tv, NULL);
+
+      if(!_usePeanoClaw) {
       boundary(h,u,v,tps,NXCELL,NYCELL);  
+      }
       
+      gettimeofday(&stop_tv, NULL);
+      time_meas.boundary_time += (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+      ++time_meas.boundary_samples;
       
       for (int i=1 ; i<NXCELL+1 ; i++){
 	for (int j=1 ; j<NYCELL+1 ; j++){
@@ -175,14 +220,24 @@
       } //end for i
       
       // Reconstruction for order 2
+      gettimeofday(&start_tv, NULL);
+
       rec->calcul(h,u,v,z,delzc1,delzc2,delz1,delz2,h1r,u1r,v1r,h1l,u1l,v1l,h2r,u2r,v2r,h2l,u2l,v2l);
       
+      gettimeofday(&stop_tv, NULL);
+      time_meas.reconstruction_time += (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+      ++time_meas.reconstruction_samples;
+
     }else{//if verif==0, ie dt2<dt1
+      gettimeofday(&start_tv, NULL);
       /*We return to the value of the previous time (i.e time=n) */
       for (int i=1 ; i<NXCELL+1 ; i++)
 	for (int j=1 ; j<NYCELL+1 ; j++)
 	  Vin1[i][j]=Vin2[i][j];
     }//end for if verif==1
+    gettimeofday(&stop_tv, NULL);
+    time_meas.vincopy_time += (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+    ++time_meas.vincopy_samples;
 
     maincalcflux(CFL_FIX,T, tps, dt_max, dt1, dt1);
     
@@ -196,7 +251,13 @@
     dt2=dt1;    
     
     //boundary conditions
+    gettimeofday(&start_tv, NULL);
     boundary(hs,us,vs,tps+dt1,NXCELL,NYCELL);  
+    gettimeofday(&stop_tv, NULL);
+    time_meas.boundary_time += (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+    ++time_meas.boundary_samples;
+
+    gettimeofday(&start_tv, NULL);
     
     for (int i=1 ; i<NXCELL+1 ; i++){
       for (int j=1 ; j<NYCELL+1 ; j++){
@@ -218,20 +279,34 @@
       } //end for j
     } //end for i
     
+    gettimeofday(&stop_tv, NULL);
+    time_meas.filter_time += (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+    ++time_meas.filter_samples;
     
     //Reconstruction for order 2 
+    gettimeofday(&start_tv, NULL);
+
     rec->calcul(hs,us,vs,z,delzc1,delzc2,delz1,delz2,h1r,u1r,v1r,h1l,u1l,v1l,h2r,u2r,v2r,h2l,u2l,v2l);
     
+    gettimeofday(&stop_tv, NULL);
+    time_meas.reconstruction_time += (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+    ++time_meas.reconstruction_samples;
     
     //commun bloc
     
+
     maincalcflux(CFL_FIX,T,tps+dt1,dt_max,dt2,dt2);
     
+#if defined(DEBUG)
+    std::cout << "check before verif is zero: dt2 " << dt2 << " dt 1 " << dt1 << std::endl;
+#endif
+
     if (dt2<dt1){
       dt1=dt2;
       tx=dt1/DX;
       ty=dt1/DY;
       verif=0;
+
     }else{
       
       //Added to do calculus at the beginning 
@@ -244,6 +319,8 @@
       height_Vinf_tot=ZERO;  
       height_of_tot=ZERO;  
       //Heun method (order 2 in time)
+      gettimeofday(&start_tv, NULL);
+
       for (int i=1 ; i<NXCELL+1 ; i++){
 	for (int j=1 ; j<NYCELL+1 ; j++){
 	  if (hsa[i][j]<=HE_CA) {   hsa[i][j]=0.;};
@@ -273,6 +350,10 @@
 	} //end for j
       } //end for i
 
+      gettimeofday(&stop_tv, NULL);
+      time_meas.heun_time = (stop_tv.tv_sec - start_tv.tv_sec) + (stop_tv.tv_usec - start_tv.tv_usec) / 1000000.0;
+      ++time_meas.heun_samples;
+
       /*Computation of the cumulated infiltrated volume*/
       Vol_inf_tot_cumul=height_Vinf_tot*DX*DY;
 
@@ -286,20 +367,25 @@
       out->check_vol(tps,dt1,Volrain_Tot,Vol_inf_tot_cumul,Vol_of_tot,Total_discharge_outflow);
 #endif 
 
+#if !defined(PEANOCLAW_FULLSWOF2D)
       //Display the percentage of elapsed time       
       cout  << '\r' << '\t' << "[" << int((tps/T)*100) << "%] done" ;  
+#endif
   
     }//end for else dt2<dt1
 
-
-
   } //end for while : loop in time
   
+#if !defined(PEANOCLAW_FULLSWOF2D) // this is actually intended
   //Verify the reason of the run finished
   if (n>MAX_ITER){
-    cerr << "\n order2: WARNING: the computation finished because the maximum number of time steps was reached (see MAX_ITER in misc.hpp)\n"; 
+    cerr << "\n order2: WARNING: the computation finished because the maximum number of time steps was reached (see MAX_ITER in misc.hpp) " << MAX_ITER <<  "\n"; 
   }
+#endif
+  gettimeofday(&total_stop_tv, NULL);
+  double total_time = (total_stop_tv.tv_sec - total_start_tv.tv_sec) + (total_stop_tv.tv_usec - total_start_tv.tv_usec) / 1000000.0;
 
+  if(_lastTimestep) {
   //to give the ultimate situation
   out->write(h,u,v,z,tps);
   
@@ -320,3 +406,7 @@
   //storage of h u v value in the final time
   out->final(DX, DY,z, h, u,v);  
 }
+
+  //TODO unterweg debug
+//  std::cout << "calcul: dt1=" << dt1 << ", dt_max=" << dt_max << std::endl;
+}
diff -wruPN ../../FullSWOF_2D-1.04.08/Sources/libschemes/scheme.cpp ../../FullSWOF_2D/Sources/libschemes/scheme.cpp
--- ../../FullSWOF_2D-1.04.08/Sources/libschemes/scheme.cpp	2013-11-07 11:52:56.000000000 +0100
+++ ../../FullSWOF_2D/Sources/libschemes/scheme.cpp	2014-07-09 16:53:33.695352620 +0200
@@ -56,9 +56,13 @@
 
 #include "scheme.hpp"
 
+//#define DEBUG
 
 Scheme::Scheme(Parameters & par):NXCELL(par.get_Nxcell()),NYCELL(par.get_Nycell()),ORDER(par.get_order()),T(par.get_T()),NBTIMES(par.get_nbtimes()),SCHEME_TYPE(par.get_scheme_type()),FRICCOEF(par.get_friccoef()),DX(par.get_dx()),DY(par.get_dy()),CFL_FIX(par.get_cflfix()),DT_FIX(par.get_dtfix()),L_IMP_Q(par.get_left_imp_discharge()),L_IMP_H(par.get_left_imp_h()),R_IMP_Q(par.get_right_imp_discharge()),R_IMP_H(par.get_right_imp_h()),B_IMP_Q(par.get_bottom_imp_discharge()),B_IMP_H(par.get_bottom_imp_h()),T_IMP_Q(par.get_top_imp_discharge()),T_IMP_H(par.get_top_imp_h()){
 
+  _usePeanoClaw = false;
+  _lastTimestep = false;
+
  	/**
 	 * @details	 
 	 * Initializations and allocations. 
@@ -156,10 +160,9 @@
   }
   
 
-  
   out = new Choice_output(par);	
 
-
+#if 0
   //storage of the topography
   out->initial(DX, DY,z, h, u,v);
 
@@ -167,7 +170,7 @@
   out->write(h,u,v,z,tps);
 
   string suffix_outputs = par.get_suffix();
-  
+#endif
 
   
   
@@ -192,13 +195,16 @@
 /*----------------------------------- */
 
 void Scheme:: maincalcflux(SCALAR cflfix, SCALAR T , SCALAR tps , SCALAR dt_max , SCALAR dt , SCALAR & dt_cal){
-  
-  
-
   SCALAR dt_tmp,dtx,dty;
   SCALAR velocity_max_x,velocity_max_y;              //tempory velocity to verify if clf > cflfix
   dtx=dty=dt_max;
   velocity_max_x=velocity_max_y=-VE_CA;
+ 
+  struct timeval start;
+  struct timeval stop;
+
+  gettimeofday(&start, NULL);
+
   for (int i=1 ; i<=NXCELL+1 ; i++){
     for (int j=1 ; j<NYCELL+1 ; j++){
       rec_hydro.calcul(h1r[i-1][j],h1l[i][j],delz1[i-1][j]);
@@ -220,7 +226,14 @@
     } //end for j
   } //end for i
   
+#if defined(DEBUG)
+  std::cout << "- dtx " << dtx << std::endl;
+#endif
   
+  gettimeofday(&stop, NULL);
+  time_meas.horizontal_flux_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
+
+  gettimeofday(&start, NULL);
   
   for (int i=1 ; i<NXCELL+1 ; i++){
     for (int j=1 ; j<=NYCELL+1 ; j++){
@@ -244,19 +257,27 @@
     } //end for j
   } //end for i
   
+#if defined(DEBUG)
+  std::cout << "- dty " << dty << std::endl;
+#endif
   
-  
+  gettimeofday(&stop, NULL);
+  time_meas.vertical_flux_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
   
   if (1 == SCHEME_TYPE){
     dt_cal=min(dtx,dty);
+    //cout << " computed new timestep: " << dt_cal << "and got cfl " << flux_num->get_cfl() << endl;
   }else{
-    if ((velocity_max_x*DT_FIX/DX>cflfix)||(velocity_max_y*DT_FIX/DY>cflfix)){
-      cout << " the CFL condition is not satisfied: CFL >"<<cflfix << endl;
+      double x_lhs = velocity_max_x*DT_FIX/DX;
+      double y_lhs = velocity_max_y*DT_FIX/DY>cflfix;
+    if ((x_lhs/DX>cflfix)||(y_lhs>cflfix)){
+      cout << " the CFL condition is not satisfied: CFL >"<<cflfix << " " << x_lhs << " " << y_lhs << " " << DX << " " << DY << endl;
       exit(1);
     } //end if
     dt_cal=DT_FIX;    
   }
 
+  ++time_meas.maincalcflux_samples;
 }
 
 /*-----------------bloc 2------------------ */
@@ -264,6 +285,9 @@
 /*----------------------------------- */
 
 void Scheme:: maincalcscheme(TAB & he, TAB & ve1, TAB & ve2, TAB & qe1, TAB & qe2, TAB & hes, TAB & ves1, TAB & ves2, TAB & qes1, TAB & qes2,TAB & Vin, SCALAR tps, SCALAR dt, int n){
+  struct timeval start;
+  struct timeval stop;
+
 /*------------------------Periodic boundary condition----------------------------------------------------------*/
   //In case of periodic boundary condition  it's necessary that the flux at the boundary (Left and Right, Bottom and Top) are the same.
   // are the same.
@@ -294,7 +318,13 @@
   /*---------------------------------------------------------------------------------------------------------*/    
  //Rainfall and infiltration calculated in Saint-Venant system
   //  rain(tps,P);  
+  gettimeofday(&start, NULL);
+  
   Prain->rain_func(tps,Rain); 
+
+  gettimeofday(&stop, NULL);
+  time_meas.rain_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
+
   /*---------------------------------------------------------------------------------------------------------*/    
 
  
@@ -309,26 +339,37 @@
 
  }
 
+
   // --------------------------------------------------------------------------------------
     
+ gettimeofday(&start, NULL);
+
  for (int i=1 ; i<NXCELL+1 ; i++){
    for (int j=1 ; j<NYCELL+1 ; j++){
      // Solution of the equation of mass conservation (First equation of Saint venant)
      hes[i][j] = he[i][j]-tx*(f1[i+1][j]-f1[i][j])-ty*(g1[i][j+1]-g1[i][j])+Rain[i][j]*dt;
-       
    } //end for j
  } //end for i	
 
+  gettimeofday(&stop, NULL);
+  time_meas.mass_conservation_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
+
  //------------------------------------------
 
  
  //Infiltration case  ------------------------  
+ gettimeofday(&start, NULL);
+
  I->calcul(hes,Vin,dt);
  hes = I->get_hmod();
  Vin = I->get_Vin();
 
+ gettimeofday(&stop, NULL);
+ time_meas.infiltration_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
+
  //------------------------------------------
  
+ gettimeofday(&start, NULL);
  
  for (int i=1 ; i<NXCELL+1 ; i++){
    for (int j=1 ; j<NYCELL+1 ; j++){
@@ -355,28 +396,40 @@
    } //end for j
  } //end for i	
 
+  gettimeofday(&stop, NULL);
+  time_meas.momentum_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
 
  /*--------------------*/
+ 
+ gettimeofday(&start, NULL);
+
  // The total cumulated rain's computed
  for (int i=1 ; i<NXCELL+1 ; i++){
    for (int j=1 ; j<NYCELL+1 ; j++){
      Volrain_Tot += Rain[i][j]*(dt-dt_first*(1-verif))*(1./ORDER)*DX*DY;
    }
  }
+
+ gettimeofday(&stop, NULL);
+ time_meas.accumulated_rain_time += (stop.tv_sec - start.tv_sec) + (stop.tv_usec - start.tv_usec) / 1000000.0;
+
  /*--------------------*/
 
+#if !defined(PEANOCLAW_FULLSWOF2D)
  Total_discharge_outflow =  out->boundaries_flux(tps,f1,g1, dt, dt_first,ORDER,verif);
+#endif
  
 #ifdef DEBUG
  out->boundaries_flux_LR(tps,f1);
  out->boundaries_flux_BT(tps,g1);
 #endif 
  
+  ++time_meas.maincalcscheme_samples;
 }
 
 
 void Scheme::boundary(TAB & h_tmp,TAB & u_tmp ,TAB & v_tmp,SCALAR time_tmp,const int NODEX, const int NODEY){
-
+#if 1
   for (int j=1 ; j<NODEY+1 ; j++){
     Lbound->calcul(h_tmp[1][j],u_tmp[1][j],v_tmp[1][j],L_IMP_H,L_IMP_Q,h_tmp[NODEX][j],u_tmp[NODEX][j],v_tmp[NODEX][j], time_tmp,-1,0);
     h_tmp[0][j] = Lbound->get_hbound();
@@ -399,7 +452,7 @@
     u_tmp[i][NODEY+1] = Tbound->get_utanbound();
     v_tmp[i][NODEY+1] = Tbound->get_unormbound();
   } //end for i
-  
+#endif
 }
 
 
@@ -440,6 +493,7 @@
 void Scheme::allocation(){
 
 
+    //std::cout << "NXCELL " << NXCELL << " NYCELL " << NYCELL << std::endl;
 	
 	Rain.resize(NXCELL+2); // i : 0->NXCELL+1
 
@@ -723,3 +777,43 @@
 
 	
 }
+
+// PEANOCLAW: extensions
+void Scheme::resetTimings() {
+      // maincalcflux times
+      time_meas.horizontal_flux_time = 0.0;
+      time_meas.vertical_flux_time = 0.0;
+      time_meas.maincalcflux_samples = 0;
+
+      // maincalcscheme times
+      time_meas.rain_time = 0.0;
+      time_meas.mass_conservation_time = 0.0;
+      time_meas.infiltration_time = 0.0;
+      time_meas.momentum_time = 0.0;
+      time_meas.accumulated_rain_time = 0.0;
+      time_meas.maincalcscheme_samples = 0;
+
+      // times used in order 2
+      time_meas.delz_time = 0.0;
+      time_meas.delz_samples = 0;
+        
+      time_meas.boundary_time = 0.0;
+      time_meas.boundary_samples = 0;
+
+      time_meas.reconstruction_time = 0.0;
+      time_meas.reconstruction_samples = 0;
+ 
+      time_meas.vincopy_time = 0.0;
+      time_meas.vincopy_samples = 0;
+
+      time_meas.filter_time = 0.0;
+      time_meas.filter_samples = 0;
+
+      time_meas.heun_time = 0.0;
+      time_meas.heun_samples = 0;
+
+      // total time
+      time_meas.total_time = 0.0;
+      time_meas.total_samples = 0;
+}
+
